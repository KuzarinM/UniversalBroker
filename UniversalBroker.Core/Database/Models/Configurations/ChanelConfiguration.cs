// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using UniversalBroker.Core.Database.Models;

namespace UniversalBroker.Core.Database.Models.Configurations
{
    public partial class ChanelConfiguration : IEntityTypeConfiguration<Chanel>
    {
        public void Configure(EntityTypeBuilder<Chanel> entity)
        {
            entity.HasKey(e => e.Id).HasName("chanels_pkey");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasMany(d => d.FromChanels).WithMany(p => p.ToChanels)
                .UsingEntity<Dictionary<string, object>>(
                    "ChanelChanel",
                    r => r.HasOne<Chanel>().WithMany()
                        .HasForeignKey("FromChanelId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("fkchanel_cha400675"),
                    l => l.HasOne<Chanel>().WithMany()
                        .HasForeignKey("ToChanelId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("fkchanel_cha969225"),
                    j =>
                    {
                        j.HasKey("FromChanelId", "ToChanelId").HasName("chanel_chanels_pkey");
                        j.ToTable("chanel_chanels");
                        j.IndexerProperty<Guid>("FromChanelId").HasColumnName("from_chanel_id");
                        j.IndexerProperty<Guid>("ToChanelId").HasColumnName("to_chanel_id");
                    });

            entity.HasMany(d => d.ToChanels).WithMany(p => p.FromChanels)
                .UsingEntity<Dictionary<string, object>>(
                    "ChanelChanel",
                    r => r.HasOne<Chanel>().WithMany()
                        .HasForeignKey("ToChanelId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("fkchanel_cha969225"),
                    l => l.HasOne<Chanel>().WithMany()
                        .HasForeignKey("FromChanelId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("fkchanel_cha400675"),
                    j =>
                    {
                        j.HasKey("FromChanelId", "ToChanelId").HasName("chanel_chanels_pkey");
                        j.ToTable("chanel_chanels");
                        j.IndexerProperty<Guid>("FromChanelId").HasColumnName("from_chanel_id");
                        j.IndexerProperty<Guid>("ToChanelId").HasColumnName("to_chanel_id");
                    });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Chanel> entity);
    }
}
